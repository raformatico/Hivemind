[gd_resource type="ShaderMaterial" load_steps=21 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=32]
uniform_name = "Albedo"

[sub_resource type="VisualShaderNodeInput" id=37]
input_name = "world"

[sub_resource type="VisualShaderNodeInput" id=38]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=39]

[sub_resource type="VisualShaderNodeInput" id=40]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=41]

[sub_resource type="VisualShaderNodeVectorOp" id=42]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=43]
function = 31

[sub_resource type="VisualShaderNodeVectorLen" id=52]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=53]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=54]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=44]
uniform_name = "player_pos"

[sub_resource type="VisualShaderNodeInput" id=45]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=46]
operator = 1

[sub_resource type="VisualShaderNodeTransformVecMult" id=47]

[sub_resource type="VisualShaderNodeInput" id=48]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorOp" id=49]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=50]

[sub_resource type="VisualShaderNodeTransformVecMult" id=51]
operator = 1

[sub_resource type="VisualShader" id=33]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform vec3 player_pos;
uniform vec4 Albedo : hint_color;



void vertex() {
// Input:11
	vec3 n_out11p0 = VERTEX;

// Input:6
	mat4 n_out6p0 = WORLD_MATRIX;

// Input:3
	vec3 n_out3p0 = VERTEX;

// TransformVectorMult:5
	vec3 n_out5p0 = (n_out6p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorUniform:2
	vec3 n_out2p0 = player_pos;

// VectorOp:4
	vec3 n_out4p0 = n_out5p0 - n_out2p0;

// VectorLen:17
	float n_out17p0 = length(n_out4p0);

// ScalarSmoothStep:18
	float n_in18p0 = 1.00000;
	float n_in18p1 = 0.00000;
	float n_out18p0 = smoothstep(n_in18p0, n_in18p1, n_out17p0);

// Input:10
	mat4 n_out10p0 = WORLD_MATRIX;

// VectorOp:7
	vec3 n_in7p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out7p0 = n_out4p0 * n_in7p1;

// VectorFunc:8
	vec3 n_out8p0 = normalize(n_out7p0);

// TransformVectorMult:9
	vec3 n_out9p0 = (vec4(n_out8p0, 1.0) * n_out10p0).xyz;

// Input:13
	vec3 n_out13p0 = vec3(UV, 0.0);

// VectorDecompose:14
	float n_out14p0 = n_out13p0.x;
	float n_out14p1 = n_out13p0.y;
	float n_out14p2 = n_out13p0.z;

// ScalarFunc:16
	float n_out16p0 = 1.0 - n_out14p1;

// VectorOp:15
	vec3 n_out15p0 = n_out9p0 * vec3(n_out16p0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out18p0) * n_out15p0;

// VectorOp:12
	vec3 n_out12p0 = n_out11p0 + n_out19p0;

// Output:0
	VERTEX = n_out12p0;

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = Albedo.rgb;
	float n_out2p1 = Albedo.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 285.172, -113.278 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 1860, 60 )
nodes/vertex/2/node = SubResource( 44 )
nodes/vertex/2/position = Vector2( -300, 320 )
nodes/vertex/3/node = SubResource( 45 )
nodes/vertex/3/position = Vector2( -280, 140 )
nodes/vertex/4/node = SubResource( 46 )
nodes/vertex/4/position = Vector2( 0, 260 )
nodes/vertex/5/node = SubResource( 47 )
nodes/vertex/5/position = Vector2( -40, 100 )
nodes/vertex/6/node = SubResource( 48 )
nodes/vertex/6/position = Vector2( -280, 60 )
nodes/vertex/7/node = SubResource( 49 )
nodes/vertex/7/position = Vector2( 205.28, 285.92 )
nodes/vertex/8/node = SubResource( 50 )
nodes/vertex/8/position = Vector2( 400, 240 )
nodes/vertex/9/node = SubResource( 51 )
nodes/vertex/9/position = Vector2( 620, 180 )
nodes/vertex/10/node = SubResource( 37 )
nodes/vertex/10/position = Vector2( 400, 160 )
nodes/vertex/11/node = SubResource( 38 )
nodes/vertex/11/position = Vector2( 700, 80 )
nodes/vertex/12/node = SubResource( 39 )
nodes/vertex/12/position = Vector2( 1480, 120 )
nodes/vertex/13/node = SubResource( 40 )
nodes/vertex/13/position = Vector2( 620, 400 )
nodes/vertex/14/node = SubResource( 41 )
nodes/vertex/14/position = Vector2( 820, 400 )
nodes/vertex/15/node = SubResource( 42 )
nodes/vertex/15/position = Vector2( 1160, 380 )
nodes/vertex/16/node = SubResource( 43 )
nodes/vertex/16/position = Vector2( 1040, 560 )
nodes/vertex/17/node = SubResource( 52 )
nodes/vertex/17/position = Vector2( 260.6, 51.6952 )
nodes/vertex/18/node = SubResource( 53 )
nodes/vertex/18/position = Vector2( 440, -100 )
nodes/vertex/19/node = SubResource( 54 )
nodes/vertex/19/position = Vector2( 1260, 0 )
nodes/vertex/connections = PoolIntArray( 2, 0, 4, 1, 3, 0, 5, 1, 6, 0, 5, 0, 5, 0, 4, 0, 4, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 1, 10, 0, 9, 0, 11, 0, 12, 0, 12, 0, 0, 0, 13, 0, 14, 0, 9, 0, 15, 0, 14, 1, 16, 0, 16, 0, 15, 1, 4, 0, 17, 0, 17, 0, 18, 2, 18, 0, 19, 0, 15, 0, 19, 1, 19, 0, 12, 1 )
nodes/fragment/2/node = SubResource( 32 )
nodes/fragment/2/position = Vector2( -240, 240 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[resource]
shader = SubResource( 33 )
shader_param/player_pos = null
shader_param/Albedo = Color( 0.0509804, 0.180392, 0.333333, 1 )
